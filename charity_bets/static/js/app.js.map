{"version":3,"sources":["app.js","bet-view/bet-controller.js","bet-view/bet.js","bet-view/comment.js","bet-view/donation.js","bet-view/edit-bet-controller.js","directives/bet-payment-directive.js","directives/d3-area.js","directives/d3-directive.js","directives/d3-gauge.js","directives/d3-money-bar.js","bets/bets-controller.js","landing/about-controller.js","landing/charity-controller.js","landing/contact-controller.js","landing/landing-controller.js","nav/nav-controller.js","services/bet-service.js","services/user-service.js","user/other-user-controller.js","user/payment-form.js","user/user-controller.js","util/util.js","errors/404/error-404-controller.js"],"names":[],"mappingsdbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['mgcrea.ngStrap', 'angularPayments','ngRoute']);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    controller: 'ViewBetCtrl',\n    controllerAs: 'vm',\n    templateUrl: '/static/bet-view/bet.html',\n    resolve: {\n      bet: ['betService', '$route', function (betService, $route) {\n        var id = $route.current.params.id;\n        return betService.getBet(id);\n      }],\n      currentUser: ['userService', function (userService) {\n        return userService.getCurrent().then(function (result) {\n          return result.data;\n        });\n      }],\n      charities: ['betService', function(betService) {\n        return betService.getCharities().then(function (result) {\n          console.log(result);\n          return result;\n        });\n      }]\n      // comments: ['betService', function (betService) {\n      //   return betService.getComments().then(function (result){\n      //     return result.data;\n      //   });\n      // }]\n    }\n  };\n  $routeProvider.when('/bet/:id', routeDefinition);\n}])\n.controller('ViewBetCtrl', ['$location', 'bet', 'betService', 'currentUser', 'Comment', 'charities', 'Donation', function ($location, bet, betService, currentUser, Comment, charities, Donation) {\n\n  var self = this;\n  self.bet = bet;\n  self.currentUser = currentUser;\n  self.comment=Comment();\n  self.donation=Donation();\n  self.charities=charities;\n  self.modalaction=false;\n  self.creatorWinner = function () {\n    return (bet.creator === bet.verified_winner);\n  };\n  self.challengerWinner = function () {\n    return (bet.challenger === bet.verified_winner);\n  };\n  // self.showme=true;\n\n  self.isBettor = function () {\n    return (currentUser.id === bet.challenger || currentUser.id  === bet.creator);\n  };\n  self.isChallengeable = function () {\n    return (bet.status === \"pending\" && currentUser.id === bet.challenger);\n  };\n  self.isPendingCreator = (bet.status === \"pending\" && currentUser.id === bet.creator);\n  self.isDonator = (bet.status === \"complete\" && currentUser.id === bet.verified_loser);\n\n  self.isActive = function () {\n      return (bet.status === \"active\");\n  };\n\n  self.isWaitingOnCurrentUser = function () {\n    var resolverId = Number((bet.challenger_outcome < 0 ? bet.creator_outcome : bet.challenger_outcome || bet.creator_outcome < 0 ? bet.challenger_outcome : bet.creator_outcome));\n    return (bet.status === 'unresolved' && resolverId !== currentUser.id);\n  };\n\n\n  self.showResolutionButton = function () {\n      return self.isBettor() && (self.isWaitingOnCurrentUser() || self.isActive());\n  };\n\n\n  self.betOutcomeWin = function (id) {\n     betService.betOutcomeWin(bet.id, currentUser.id).then(function (result) {\n       self.bet=result;\n       bet=self.bet\n     });\n  };\n\n  self.betOutcomeLose = function (id) {\n     betService.betOutcomeLose(bet.id);\n    //  self.showme=false;\n  };\n\n  self.acceptBet = function (charity) {\n    betService.acceptBet(bet.id).then(function (result) {\n      console.log(result);\n      self.bet.status=result.status;\n    });\n    betService.challengerCharity(bet.id, bet.charity_challenger);\n  };\n\n  self.deleteBet = function () {\n    betService.deleteBet(bet.id).then(function(result) {\n      self.goToProfile();\n    });\n  };\n\n  self.addComment = function () {\n    betService.addComment(bet.id, self.comment).then(function(result) {\n      console.log(result.comment);\n      self.bet.comments.comment=result.comment;\n    });\n     self.comment=\"\";\n    location.reload();\n  };\n\n  self.sendStripe = function (card) {\n    self.betOutcomeLose(currentUser.id);\n    console.log(bet);\n    Stripe.card.createToken(card, function (status, result) {\n      console.log('GOT', result);\n      console.log(bet.id)\n      betService.sendStripe(self.bet.id, result.id);\n      location.reload();\n    });\n  };\n\n  self.sendStripeDonationCreator = function (card, creatorid, amount) {\n      Stripe.card.createToken(card, function (status, result) {\n      console.log('GOT', result);\n      betService.addDonationCreator(self.bet.id, creatorid, amount, result.id).then(self.goToBet);\n      location.reload();\n    });\n  };\n\n  self.sendStripeDonationChallenger = function (card, challengerid, amount) {\n    console.log(card);\n    Stripe.card.createToken(card, function (status, result) {\n      console.log('GOT', result);\n      betService.addDonationChallenger(self.bet.id, challengerid, amount, result.id).then(self.goToBet);\n      location.reload();\n    });\n  };\n\n  self.goToProfile = function () {\n    $location.path('/user/user-profile');\n  };\n\n  self.clearForm = function () {\n    self.card.name = \"\";\n    self.card.cvc = \"\";\n    self.card.number = \"\";\n    self.card.exp_month = \"\";\n    self.card.exp_year = \"\";\n  };\n\n\n  // self.addDonation = function () {\n  //   betService.addDonation(self.bet.id, self.Donation).then(self.goToBet);\n  // };\n\n\n\n\n\n\n\n\n}]);\n","app.factory('Bet', function () {\n  return function (spec) {\n    spec = spec || {};\n    return {\n        title: spec.title,\n        challenger_name: spec.challenger_name,\n        amount: spec.amount,\n        date: spec.date,\n        location: spec.location,\n        description: spec.description,\n        charity_creator: spec.charity_creator\n    };\n  };\n});\n","app.factory('Comment', function () {\n  return function (spec) {\n    spec = spec || {};\n    return {\n      comment: spec.comment\n      \n    };\n  };\n});\n","app.factory('Donation', function () {\n  return function (spec) {\n    spec = spec || {};\n    return {\n        amount: spec.donation_amount,\n        challenger_id: spec.challenger_id,\n        creator_id: spec.creator_id,\n    };\n  };\n});\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: '/static/bet-view/edit-bet.html',\n    controller: 'EditBetCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      currentUser: ['userService', function (userService) {\n        return userService.getCurrent().then(function (result) {\n          return result.data;\n        });\n      }],\n      users: ['userService', function(userService) {\n        return userService.getUsers().then(function (result) {\n          console.log(result.data);\n          return result.data;\n        });\n      }],\n      charities: ['betService', function(betService) {\n        return betService.getCharities().then(function (result) {\n          console.log(result);\n          return result;\n        });\n      }]\n    }\n  };\n  $routeProvider.when('/createbet', routeDefinition);\n}])\n.controller('EditBetCtrl', ['$location', 'Bet', 'betService', 'currentUser', 'users', 'charities', function ($location, Bet, betService, currentUser, users, charities) {\n\n  var self = this;\n  self.bet = Bet();\n  self.currentUser = currentUser;\n  self.users = users;\n  self.charities = charities;\n  self.primaryItems = true;\n\n\n  self.addBet = function () {\n    betService.addBet(self.bet).then(self.goToBet);\n  };\n\n  self.goToBet = function (bet) {\n    $location.path('/bet/' + bet.id);\n  };\n\n  // self.getUsers = function () {\n  //   userService.getUsers();\n  // };\n\n  self.cancel = function(e) {\n    if (e.keyCode == 27) {\n      self.betForm.challengerName.$rollbackViewValue();\n    }\n  };\n\n\n\n}]);\n","app.directive('betPaymentForm', function() {\n  return {\n    restrict: 'E',\n    templateUrl: 'static/directives/bet-payment-form-temp.html'\n  }\n});\n","app.directive('areaChart', function () {\n  return {\n      restrict: \"EA\",\n      replace: true,\n      scope: {\n        dataset: '='\n      },\n      link: function(scope, element, attrs) {\n\n        var lineData = [ { \"x\": \"1-May-16\" ,\"y\": 35},{ \"x\": \"6-May-16\",    \"y\": 10}, { \"x\": \"8-May-16\",   \"y\": 15}  ];\n\n        // var dataset = scope.dataset;\n\n        function getDate(d) {\n             return new Date(d.x);\n         }\n\n        var margin = {top: 20, right: 30, bottom: 20, left: 30};\n        var width = 300 - margin.left - margin.right,\n            height = 275 - margin.top - margin.bottom;\n\n        var parseDate = d3.time.format(\"%d-%b-%y\").parse;\n\n        var svg = d3.select(element[0]).append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n          .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n\n        lineData.forEach(function(d) {\n                d.x = parseDate(d.x);\n                d.y = +d.y;\n            });\n\n        var\tx = d3.time.scale().range([0, width]);\n        var\ty = d3.scale.linear().range([height, 0 ]);\n\n\n        var area = d3.svg.area()\n                .interpolate(\"monotone\")\n                .x(function(d)  {  return x(d.x); })\n                .y0(230)\n                .y1(function(d) {  return y(d.y); });\n\n\n        var lineFunction = d3.svg.line()\n                       .x(function(d) { return x(d.x); })\n                       .y(function(d) { return y(d.y); })\n                       .interpolate(\"monotone\");\n\n\n\n        var xAxis = d3.svg.axis().scale(x).orient(\"bottom\").ticks(2);\n\n        var yAxis = d3.svg.axis()\n                          .scale(y)\n                          .orient(\"left\")\n                          .ticks(5);\n\n        x.domain(d3.extent(lineData,  function(d) { return d.x; }));\n        y.domain([0, d3.max(lineData, function(d) { return d.y; })]);\n\n        svg.append(\"path\")\n        \t\t.attr(\"class\", \"area\")\n        \t\t.attr(\"d\", area(lineData));\n\n        svg.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"d\", lineFunction(lineData))\n                    .attr(\"stroke\", \"blue\")\n                    .attr(\"stroke-width\", 1)\n                    .attr(\"fill\", \"none\");\n\n\n        svg.append(\"g\")\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(0,\" + (height) + \")\")\n            .call(xAxis);\n\n            // Add the Y Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(yAxis);\n\n\n\n\n      }\n\n  };\n});\n","app.directive('donutChart', function () {\n  return {\n      restrict: \"EA\",\n      replace: true,\n      scope: {\n        dataset: '='\n      },\n      link: function(scope, element, attrs) {\n\n        var dataset = scope.dataset;\n\n        var width = 600,\n           height = 400,\n           radius = Math.min(width, height) / 2;\n\n        var color = d3.scale.category20();\n\n        var pie = d3.layout.pie()\n          .sort(null);\n\n        var arc = d3.svg.arc()\n          .innerRadius(radius - 100)\n          .outerRadius(radius - 50);\n\n        var svg = d3.select(element[0]).append(\"svg\")\n           .attr(\"width\", width/2)\n           .attr(\"height\", width/2)\n           .append(\"g\")\n           .attr(\"transform\", \"translate(\" + width / 4 + \",\" + width / 4 + \")\");\n\n\n        var path = svg.selectAll(\"path\")\n           .data(pie(dataset))\n           .enter().append(\"path\")\n           .attr(\"fill\", function (d, i) {\n             return color(i);\n           })\n           .attr(\"d\", arc);\n            // svg.insert(\"text\", \"g\")\n            // .text(\"{{vm.currentUser}}\")\n            // .attr(\"class\", \"css-label-class\")\n            // .attr(\"text-anchor\", \"middle\");\n      }\n\n  };\n});\n","app.directive('gaugeChart', function () {\n  return {\n      restrict: \"EA\",\n      replace: true,\n      scope: {\n        dataset: '='\n      },\n      link: function(scope, element, attrs) {\n\n        var dataset = scope.dataset;\n\n\n        // var dataset = {\n        //  apples: [53245, 28479, 19697, 24037, 40245],\n        // };\n\n\n        var x = dataset[0];\n        var y = dataset[1];\n        var winstreak = [x, y-x]\n        var percentage = Math.floor((x/y) * 100);\n\n\n        var width = 700,\n           height = 400,\n           radius = Math.min(width, height) / 2;\n\n        var color = d3.scale.category20();\n\n        var pie = d3.layout.pie()\n           .sort(null)\n           pie.startAngle([-1.57079633])\n           pie.endAngle([1.57079633]);\n\n        var arc = d3.svg.arc()\n           .innerRadius(radius - 100)\n           .outerRadius(radius - 50);\n\n        var svg = d3.select(element[0]).append(\"svg\")\n           .attr(\"width\", width/ 2)\n           .attr(\"height\", height/ 2)\n           .append(\"g\")\n           .attr(\"transform\", \"translate(\" + width / 4 + \",\" + width / 4 + \")\");\n\n        var title = svg.append(\"text\")\n         .attr(\"dy\", \".35em\")\n         .style(\"text-anchor\", \"middle\")\n         .attr(\"class\", \"inside\")\n         .text(function(d) { return percentage + \"%\"; })\n\n        var path = svg.selectAll(\"path\")\n           .data(pie(winstreak))\n         .enter().append(\"path\")\n           .attr(\"fill\", function(d, i) { return color(i); })\n           .attr(\"d\", arc);\n\n\n      }\n\n  };\n});\n","// app.directive('moneyBar', function () {\n//   return {\n//       restrict: \"EA\",\n//       replace: true,\n//       scope: {\n//         dataset: '='\n//       },\n//       link: function(scope, element, attrs) {\n//\n//\n//         var dataset = scope.dataset;\n//\n//         var margins = {\n//          top: 12,\n//          left: 50,\n//          right: 24,\n//          bottom: 24\n//        },\n//\n//       width = 400- margins.left - margins.right,\n//          height = 70 - margins.top - margins.bottom,\n//          dataset = [{\n//              data: [{\n//                 //  count: varA\n//              }],\n//          }, {\n//              data: [{\n//                  count: varB\n//              }],\n//\n//\n//      dataset = dataset.map(function (d) {\n//            return d.data.map(function (o, i) {\n//            // Structure it so that your numeric\n//            // axis (the stacked amount) is y\n//            return {\n//                y: o.count,\n//                x: o.money\n//            };\n//        });\n//    }),\n//    stack = d3.layout.stack();\n//\n//       stack(dataset);\n//\n//     dataset = dataset.map(function (group) {\n//          return group.map(function (d) {\n//              // Invert the x and y values, and y0 becomes x0\n//              return {\n//                  x: d.y,\n//                  y: d.x,\n//                  x0: d.y0\n//              };\n//          });\n//       }),\n//          svg = d3.select('body')\n//              .append('svg')\n//              .attr('width', width + margins.left + margins.right)\n//              .attr('height', height + margins.top + margins.bottom)\n//              .append('g')\n//              .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')'),\n//          xMax = d3.max(dataset, function (group) {\n//              return d3.max(group, function (d) {\n//                  return d.x + d.x0;\n//              });\n//          }),\n//       xScale = d3.scale.linear()\n//              .domain([0, xMax])\n//              .range([0, width]),\n//          money_spent = dataset[0].map(function (d) {\n//              return d.y;\n//          }),\n//          _ = console.log(money_spent),\n//          yScale = d3.scale.ordinal()\n//              .domain(money_spent)\n//              .rangeRoundBands([0, height]),\n//\n//          yAxis = d3.svg.axis()\n//              .scale(yScale)\n//              .orient('left'),\n//          colors = [\"#85bb65 \",\"#73706F \"]\n//          groups = svg.selectAll('g')\n//              .data(dataset)\n//              .enter()\n//              .append('g')\n//              .style('fill', function (d, i) {\n//              return colors[i];\n//          }),\n//          rects = groups.selectAll('rect')\n//              .data(function (d) {\n//              return d;\n//          })\n//              .enter()\n//              .append('rect')\n//              .attr('x', function (d) {\n//              return xScale(d.x0);\n//          })\n//              .attr('y', function (d, i) {\n//              return yScale(d.y);\n//          })\n//              .attr('height', function (d) {\n//              return yScale.rangeBand();\n//          })\n//              .attr('width', function (d) {\n//              return xScale(d.x);\n//          })\n//              .on('mouseover', function (d) {\n//              var xPos = parseFloat(d3.select(this).attr('x')) / 2 + width / 2;\n//              var yPos = parseFloat(d3.select(this).attr('y')) + yScale.rangeBand() / 2;\n//\n//              d3.select('#tooltip')\n//                  .style('left', xPos + 'px')\n//                  .style('top', yPos + 'px')\n//                  .select('#value')\n//                  .text(d.x);\n//\n//              d3.select('#tooltip').classed('hidden', false);\n//          })\n//              .on('mouseout', function () {\n//              d3.select('#tooltip').classed('hidden', true);\n//          })\n//\n//          svg.append('g')\n//              .attr('class', 'axis')\n//              .attr('transform', 'translate(0,' + height + ')')\n//              .call();\n//\n//         svg.append('g')\n//            .attr('class', 'axis')\n//            .call(yAxis);\n//\n//         series.forEach(function (s, i) {\n//            svg.append('text')\n//                .attr('fill', 'black')\n//                .attr('x', width + margins.left + 8)\n//                .attr('y', i * 24 + 24)\n//                .text(s);\n//       });\n//\n//     }\n//   }\n// });\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/bets/bets.html',\n    controller: 'BetsCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      bets: ['betService', function (betService){\n        return betService.getBets();\n      }]\n    }\n  };\n  $routeProvider.when('/bets', routeDefinition);\n}])\n.controller('BetsCtrl', ['$location', 'betService', 'bets', function ($location, betService, bets) {\n\n  var self = this;\n  self.bets = bets;\n  self.sort = \"total_money_raised\";\n  self.filterClassName = \"bets-filter\";\n  // self.filter = \"all\";\n\n  // self.currentUser = currentUser;\n  // self.users = users;\n\n  self.goToBet = function (id) {\n    $location.path('/bet/' + id );\n    };\n\n  // self.isVerifiedWinner = function () {\n  //   return (bets.winner_name !== null);\n  // }\n\n  self.filterBetComplete = function (filter, sort) {\n    var filter = \"complete\";\n    var sort = self.sort;\n    betService.filterBet(filter, sort).then(function (result) {\n      console.log(result);\n      self.bets = result;\n    });\n  };\n\n  self.filterBetActive = function (filter, sort) {\n    var filter = \"active\";\n    var sort = self.sort;\n    betService.filterBet(filter, sort).then(function (result) {\n      console.log(result);\n      self.bets = result;\n    });\n  };\n\n  self.filterBetPending = function (filter, sort) {\n    var filter = \"pending\";\n    var sort = self.sort;\n    betService.filterBet(filter, sort).then(function (result) {\n      console.log(result);\n      self.bets = result;\n    });\n  };\n\n  self.filterBetAll = function (filter, sort) {\n    var filter = \"all\";\n    var sort = self.sort;\n    betService.filterBet(filter, sort).then(function (result) {\n      console.log(result);\n      self.bets = result;\n    });\n  };\n\n  self.isActiveFilter = function () {\n    if (self.betsFilterClassName === \"bets-filter\") {\n      self.betsFilterClassName = \"bets-filter-active\";\n    }  else {\n      self.betsFilterClassName = \"bets-filter\";\n    }\n  };\n\n  self.sortDate = function () {\n    var filter = self.filter;\n    var sort = \"id\";\n    betService.filterBet(filter, sort).then(function (result) {\n      console.log(result);\n      self.bets = result;\n    });\n  };\n\n  self.sortFunding = function () {\n    var filter = self.filter;\n    var sort = \"total_money_raised\";\n    betService.filterBet(filter, sort).then(function (result) {\n      console.log(result);\n      self.bets = result;\n    });\n\n  };\n\n  self.sortBetSize = function () {\n    var filter = self.filter;\n    var sort = \"amount\";\n    betService.filterBet(filter, sort).then(function (result) {\n      console.log(result);\n      self.bets = result;\n    });\n\n  };\n\n\n\n\n\n\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: '/static/landing/about.html',\n    controller: 'AboutCtrl',\n    controllerAs: 'vm',\n  };\n  $routeProvider.when('/about', routeDefinition);\n}])\n.controller('AboutCtrl', ['$location', function ($location) {\n\n  var self = this;\n  \n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: '/static/landing/organizations.html',\n    controller: 'OrgCtrl',\n    controllerAs: 'vm',\n  };\n  $routeProvider.when('/partners', routeDefinition);\n}])\n.controller('OrgCtrl', ['$location', function ($location) {\n\n  var self = this;\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: '/static/landing/contact.html',\n    controller: 'ContactCtrl',\n    controllerAs: 'vm',\n  };\n  $routeProvider.when('/contact', routeDefinition);\n}])\n.controller('ContactCtrl', ['$location', function ($location) {\n\n  var self = this;\n\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: '/static/landing/landing.html',\n    controller: 'LandingCtrl',\n    controllerAs: 'vm',\n  };\n  $routeProvider.when('/', routeDefinition);\n}])\n.controller('LandingCtrl', ['$location', function ($location) {\n\n  var self = this;\n\n\n\n}]);\n","app.controller('MainNavCtrl',\n  ['$location', 'StringUtil', 'userService', function($location, StringUtil, userService) {\n    var self = this;\n\n    self.isActive = function (path) {\n      // The default route is a special case.\n      if (path === '/') {\n        return $location.path() === '/';\n      }\n      return StringUtil.startsWith($location.path(), path);\n    };\n\n    // self.addToLi = function () {\n    //   var navItem = document.querySelector('.')\n    //   return\n    //     if (isActive) {\n    //     }\n    // }\n\n}]);\n","app.factory('betService', ['$http', '$log', function($http, $log) {\n\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function put(url, bet) {\n    return processAjaxPromise($http.put(url, bet));\n  }\n\n  function post(url, share) {\n    return processAjaxPromise($http.post(url, share));\n  }\n\n  function remove(url) {\n    return processAjaxPromise($http.delete(url));\n\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      var data = result.data;\n      return data.data;\n    })\n    .catch(function (error) {\n     $log.log(error);\n     throw error;\n    });\n  }\n\n\n  return {\n    // getBetList: function () {\n    //   return get('/api/res');\n    // },\n\n    getBet: function (id) {\n      return get('/api/bets/' + id);\n    },\n\n    addBet: function (bet) {\n      return post('/api/user/bets', bet);\n    },\n\n    getBets: function () {\n      return get('/api/bets');\n    },\n\n    betOutcomeWin: function(id, currentuserId) {\n      return put('/api/bets/' + id, {\"outcome\": currentuserId});\n    },\n\n    betOutcomeLose: function(id) {\n      console.log('/api/bets/' + id);\n      return put('/api/bets/' + id, {\"outcome\": -1});\n    },\n\n    acceptBet: function(id) {\n      return put('/api/bets/' + id, {\"status\": \"active\"});\n    },\n\n    deleteBet: function (id) {\n      return remove('/api/bets/' + id);\n    },\n\n    addComment: function (id, comment) {\n      return post('/api/bets/' + id + '/comments', comment);\n    },\n\n    getCharities: function () {\n      return get('/api/charities');\n    },\n\n    challengerCharity: function (id, charity) {\n      console.log('/api/bets/' + id, {'charity_challenger': charity});\n      return put ('/api/bets/' + id, {'charity_challenger': charity});\n    },\n\n    sendStripe: function (betid, resultid) {\n      console.log('api/bets/' + betid + '/pay_bet', resultid);\n      return post('api/bets/' + betid + '/pay_bet', {'token': resultid});\n    },\n\n    addDonationCreator: function(betid, creatorId, amount, resultid) {\n      console.log('api/bets/' + betid + '/fund_bettor', {'creatorid': creatorId, 'amount': amount, 'token': resultid});\n      return post('api/bets/' + betid + '/fund_bettor', {'creatorid': creatorId, 'amount': amount, 'token': resultid});\n    },\n\n    addDonationChallenger: function(betid, challengerId, amount, resultid) {\n      console.log('api/bets/' + betid + '/fund_bettor', {'creatorid': challengerId, 'amount': amount, 'token': resultid});\n      return post('api/bets/' + betid + '/fund_bettor', {'challengerid': challengerId, 'amount': amount, 'token': resultid});\n    },\n\n    filterBet: function (filter, sort) {\n        return get ('api/bets/' + filter + '/' + sort);\n    }\n\n\n\n    // deleteShare: function (id) {\n    //   return remove('/api/res/' + id);\n    // }\n  };\n}]);\n","app.factory('userService', ['$http', '$q', '$log', function($http, $q, $log) {\n\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function post(url, share) {\n    return processAjaxPromise($http.post(url, share));\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      return result.data;\n    })\n    .catch(function (error) {\n      $log.log(error);\n    });\n  }\n\n  return {\n    getUsers: function () {\n      return get('/api/users');\n    },\n\n    getByUserId: function (userId) {\n      if (!userId) {\n        throw new Error('getByUserId requires a user id');\n      }\n      return get('/api/user/' + userId);\n    },\n\n    addUser: function (user) {\n      return processAjaxPromise($http.post('/api/users', user));\n    },\n\n    getCurrent: function () {\n      return get('/api/user/me');\n    },\n\n    logOut: function (currentUser) {\n      return post('/api/logout');\n    },\n\n    getCurrentUserBets: function () {\n      return get('/api/user/bets');\n    },\n\n    getBetsByUser: function (id) {\n      return get ('api/user/' + id + '/bets');\n    }\n\n    // sendStripe: function (betid, resultid) {\n    //   console.log('api/bets/' + betid + '/pay_bet', resultid);\n    //   return post('api/bets/' + betid + '/pay_bet', {'token': resultid});\n    // }\n\n  };\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/user/other-users.html',\n    controller: 'OtherUserCtrl',\n    controllerAs: 'vm',\n    resolve: {\n          // user: ['userService', '$route', function (userService, $route) {\n          //   var id = $route.current.params.id;\n          //   return userService.getByUserId(id);\n          // }],\n          thisUser: ['userService', '$route', function (userService, $route) {\n          return userService.getByUserId($route.current.params.id).then(function (result) {\n            return result.data;\n          });\n          }],\n          thisUserBets: ['userService', '$route', function (userService, $route) {\n          return userService.getBetsByUser($route.current.params.id).then(function (result) {\n          console.log(result.data);\n            return result.data;\n          });\n          }]\n      }\n  };\n  $routeProvider.when('/user/user-profile/:id', routeDefinition);\n}])\n.controller('OtherUserCtrl', ['$location', 'userService', 'thisUser', 'thisUserBets', function ($location, userService, thisUser, thisUserBets) {\n\n  var self = this;\n  self.thisUser = thisUser;\n  self.thisUserBets = thisUserBets;\n  self.winDonutData = [thisUser.wins, thisUser.losses]\n\n}]);\n","// app.directive('paymentForm', function() {\n//   return {\n//     restrict: 'E',\n//     templateUrl: 'static/directives/user-payment-form-template.html'\n//   };\n// });\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/user/user-profile.html',\n    controller: 'UserCtrl',\n    controllerAs: 'vm',\n    resolve: {\n          currentUser: ['userService', function (userService) {\n          return userService.getCurrent().then(function (result) {\n            return result.data;\n          });\n          }],\n          currentUserBets: ['userService', function (userService) {\n          console.log(userService.getCurrentUserBets());\n          return userService.getCurrentUserBets().then(function (result) {\n            return result.data;\n          });\n          }]\n      }\n  };\n  $routeProvider.when('/user/user-profile', routeDefinition);\n}])\n.controller('UserCtrl', ['$location', 'userService', 'currentUser', 'currentUserBets', '$scope', function ($location, userService, currentUser, currentUserBets, $scope) {\n\n  var self = this;\n  self.currentUser = currentUser;\n  self.currentUserBets = currentUserBets;\n  self.isBetLoser = (currentUser.id === currentUserBets.verified_loser && currentUserBets.loser_paid === \"unpaid\");\n  self.winDonutData = [currentUser.money_won, currentUser.money_lost];\n  self.doo = [1000, 650];\n  self.goo = [currentUser.money_won, currentUser.money_lost];\n  self.gaugeData = [currentUser.win_streak, currentUser.longest_win_streak];\n\n  $scope.stripeCallback = function (code, result) {\n      var buttons = document.querySelector('.form-stripe-button');\n      var id = buttons.parentNode.getAttribute('data-id');\n      if (result.error) {\n          window.alert('it failed! error: ' + result.error.message);\n      } else {\n          window.alert('success! token: ' + result.id);\n          alert(id, result.id);\n          userService.sendStripe(id, result.id);\n      }\n  };\n\n\n\n\n\n}]);\n","app.factory('StringUtil', function() {\n  return {\n    startsWith: function (str, subStr) {\n      str = str || '';\n      return str.slice(0, subStr.length) === subStr;\n    }\n  };\n});\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n"],"sourceRoot":"/source/"}