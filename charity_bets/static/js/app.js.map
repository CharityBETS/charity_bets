{"version":3,"sources":["app.js","bet-view/bet-controller.js","bet-view/bet.js","bet-view/comment.js","bet-view/edit-bet-controller.js","bets/bets-controller.js","landing/landing-controller.js","nav/nav-controller.js","services/bet-service.js","services/user-service.js","user/stripe-directive.js","user/user-controller.js","util/util.js","errors/404/error-404-controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACblDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['mgcrea.ngStrap', 'ngRoute']);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    controller: 'ViewBetCtrl',\n    controllerAs: 'vm',\n    templateUrl: '/static/bet-view/bet.html',\n    resolve: {\n      bet: ['betService', '$route', function (betService, $route) {\n        var id = $route.current.params.id;\n        return betService.getBet(id);\n      }],\n      currentUser: ['userService', function (userService) {\n        return userService.getCurrent().then(function (result) {\n          return result.data;\n        });\n      }]\n      // comments: ['betService', function (betService) {\n      //   return betService.getComments().then(function (result){\n      //     return result.data;\n      //   });\n      // }]\n    }\n  };\n  $routeProvider.when('/bet/:id', routeDefinition);\n}])\n.controller('ViewBetCtrl', ['$location', 'bet', 'betService', 'currentUser', 'Comment', function ($location, bet, betService, currentUser, Comment) {\n\n  var self = this;\n  self.isBettor = (currentUser.id === bet.challenger || currentUser.id  === bet.creator);\n  self.bet = bet;\n  self.currentUser = currentUser;\n  self.showme=true;\n  self.isChallengeable = (bet.status === \"pending\" && currentUser.id === bet.challenger);\n  self.comment=Comment();\n\n  self.betOutcomeWin = function (id) {\n     betService.betOutcomeWin(bet.id, currentUser.id);\n  };\n\n  self.betOutcomeLose = function (id) {\n     betService.betOutcomeLose(bet.id);\n     self.showme=false;\n  };\n\n  self.acceptBet = function (id) {\n    betService.acceptBet(bet.id);\n  };\n\n  self.addComment = function () {\n    betService.addComment(bet.id, self.comment);\n    self.comment=\"\";\n  }\n\n\n}]);\n","app.factory('Bet', function () {\n  return function (spec) {\n    spec = spec || {};\n    return {\n        title: spec.title,\n        challenger: spec.challenger,\n        amount: spec.amount,\n        date: spec.date,\n        location: spec.location,\n        description: spec.description\n    };\n  };\n});\n","app.factory('Comment', function () {\n  return function (spec) {\n    spec = spec || {};\n    return {\n      comment: spec.comment\n      \n    };\n  };\n});\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: '/static/bet-view/edit-bet.html',\n    controller: 'EditBetCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      currentUser: ['userService', function (userService) {\n        return userService.getCurrent().then(function (result) {\n          return result.data;\n        })\n      }],\n      users: ['userService', function(userService) {\n        return userService.getUsers().then(function (result) {\n          return result.data;\n        })\n      }]\n    }\n  };\n  $routeProvider.when('/createbet', routeDefinition);\n}])\n.controller('EditBetCtrl', ['$location', 'Bet', 'betService', 'currentUser', 'users', function ($location, Bet, betService, currentUser, users) {\n\n  var self = this;\n  self.bet = Bet();\n  self.currentUser = currentUser;\n  self.users = users;\n\n  self.addBet = function () {\n    betService.addBet(self.bet).then(self.goToBet);\n  };\n\n  self.goToBet = function (bet) {\n    $location.path('/bet/' + bet.id);\n  };\n\n  self.getUsers = function () {\n    userService.getUsers();\n  };\n\n\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/bets/bets.html',\n    controller: 'BetsCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      bets: ['betService', function (betService){\n        return betService.getBets();\n      }]\n    }\n  };\n  $routeProvider.when('/bets', routeDefinition);\n}])\n.controller('BetsCtrl', ['$location', 'betService', 'bets', function ($location, betService, bets) {\n\n  var self = this;\n  self.bets = bets;\n  // self.currentUser = currentUser;\n  // self.users = users;\n\n  self.goToBet = function (id) {\n    $location.path('/bet/' + id );\n    };\n\n\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: '/static/landing/landing.html',\n    controller: 'LandingCtrl',\n    controllerAs: 'vm',\n  };\n  $routeProvider.when('/', routeDefinition);\n}])\n.controller('LandingCtrl', ['$location', function ($location) {\n\n  var self = this;\n\n\n\n}]);\n","app.controller('MainNavCtrl',\n  ['$location', 'StringUtil', 'userService', function($location, StringUtil, userService) {\n    var self = this;\n\n    self.isActive = function (path) {\n      // The default route is a special case.\n      if (path === '/') {\n        return $location.path() === '/';\n      }\n      return StringUtil.startsWith($location.path(), path);\n    };\n\n}]);\n","app.factory('betService', ['$http', '$log', function($http, $log) {\n\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function put(url, bet) {\n    return processAjaxPromise($http.put(url, bet));\n  }\n\n  function post(url, share) {\n    return processAjaxPromise($http.post(url, share));\n  }\n\n  function remove(url) {\n    return processAjaxPromise($http.delete(url));\n\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      var data = result.data;\n      console.log(data);\n      return data.data;\n    })\n    .catch(function (error) {\n     $log.log(error);\n     throw error;\n    });\n  }\n\n\n  return {\n    // getBetList: function () {\n    //   return get('/api/res');\n    // },\n\n    getBet: function (id) {\n      return get('/api/bets/' + id);\n    },\n\n    addBet: function (bet) {\n      return post('/api/user/bets', bet);\n    },\n\n    getBets: function () {\n      return get('/api/bets');\n    },\n\n    betOutcomeWin: function(id, currentuserId) {\n      return put('/api/bets/' + id, {\"outcome\": currentuserId});\n    },\n\n    betOutcomeLose: function(id) {\n      console.log('/api/bets/' + id);\n      return put('/api/bets/' + id, {\"outcome\": -1});\n    },\n\n    acceptBet: function(id) {\n      return put('/api/bets/' + id, {\"status\": \"active\"});\n    },\n\n    addComment: function (id, comment) {\n      alert('comment-test-2');\n      return post('/api/bets/' + id + '/comments', comment);\n    }\n\n\n\n    // deleteShare: function (id) {\n    //   return remove('/api/res/' + id);\n    // }\n  };\n}]);\n","app.factory('userService', ['$http', '$q', '$log', function($http, $q, $log) {\n\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      return result.data;\n    })\n    .catch(function (error) {\n      $log.log(error);\n    });\n  }\n\n  return {\n    getUsers: function () {\n      return get('/api/users');\n    },\n\n    getByUserId: function (userId) {\n      if (!userId) {\n        throw new Error('getByUserId requires a user id');\n      }\n\n      return get('/api/users/' + userId);\n    },\n\n    addUser: function (user) {\n      return processAjaxPromise($http.post('/api/users', user));\n    },\n\n    getCurrent: function () {\n      return get('/api/user/me');\n    },\n\n    logOut: function (currentUser) {\n      return post('/api/logout');\n    },\n\n    getCurrentUserBets: function () {\n      return get('/api/user/bets');\n    },\n\n    getBetsByUser: function () {\n      return get ('api/user/' + id + '/bets');\n    }\n\n  };\n}]);\n","app.directive('stripeForm', ['$log', function($log) {\n  return function(scope, elem, attrs) {\n    console.log('x');\n    var form =  document.createElement(\"form\");;\n    form.action = \"charge\";\n    form.method = \"POST\";\n    var script =  document.createElement(\"script\");\n    script.src = \"https://checkout.stripe.com/checkout.js\";\n    script.className = \"stripe-button\";\n    script.setAttribute(\"data-key\", \"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\n    script.setAttribute(\"data-image\", \"square-image.png\");\n    script.setAttribute(\"data-name\", \"Demo Site\");\n    script.setAttribute(\"data-description\", \"2 widgets ($40.00)\");\n    script.setAttribute(\"data-amount\", \"4000\");\n\n    form.appendChild(script);\n\n    elem.append(angular.element(form));\n  };\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/user/user-profile.html',\n    controller: 'UserCtrl',\n    controllerAs: 'vm',\n    resolve: {\n          currentUser: ['userService', function (userService) {\n          return userService.getCurrent().then(function (result) {\n            return result.data;\n          });\n          }],\n          currentUserBets: ['userService', function (userService) {\n          console.log(userService.getCurrentUserBets());\n          return userService.getCurrentUserBets().then(function (result) {\n            return result.data;\n          });\n          }]\n      }\n  };\n  $routeProvider.when('/user/user-profile', routeDefinition);\n}])\n.controller('UserCtrl', ['$location', 'userService', 'currentUser', 'currentUserBets', function ($location, userService, currentUser, currentUserBets) {\n\n  var self = this;\n  self.currentUser = currentUser;\n  self.currentUserBets = currentUserBets;\n\n\n  // app.directive('stripeForm', ['$log', function($log) {\n  //   return function(scope, elem, attrs) {\n  //     console.log('x');\n  //     var form =  document.createElement(\"form\");;\n  //     form.action = \"charge\";\n  //     form.method = \"POST\";\n  //     var script =  document.createElement(\"script\");\n  //     script.src = \"https://checkout.stripe.com/checkout.js\";\n  //     script.className = \"stripe-button\";\n  //     script.setAttribute(\"data-key\", \"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\n  //     script.setAttribute(\"data-image\", \"square-image.png\");\n  //     script.setAttribute(\"data-name\", \"Demo Site\");\n  //     script.setAttribute(\"data-description\", \"2 widgets ($20.00)\");\n  //     script.setAttribute(\"data-amount\", \"2000\");\n  //\n  //     form.appendChild(script);\n  //\n  //     elem.append(angular.element(form));\n  //   };\n  // }]);\n\n\n\n}]);\n","app.factory('StringUtil', function() {\n  return {\n    startsWith: function (str, subStr) {\n      str = str || '';\n      return str.slice(0, subStr.length) === subStr;\n    }\n  };\n});\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n"],"sourceRoot":"/source/"}