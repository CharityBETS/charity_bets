{"version":3,"sources":["app.js","bet-view/bet-controller.js","bet-view/bet.js","bet-view/edit-bet-controller.js","bets/bets-controller.js","landing/landing-controller.js","nav/nav-controller.js","services/bet-service.js","services/user-service.js","user/user-controller.js","util/util.js","errors/404/error-404-controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['ngRoute']);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    controller: 'ViewBetCtrl',\n    controllerAs: 'vm',\n    templateUrl: '/static/bet-view/bet.html',\n    resolve: {\n      bet: ['betService', '$route', function (betService, $route) {\n        var id = $route.current.params.id;\n        return betService.getBet(id);\n      }],\n      currentUser: ['userService', function (userService) {\n        console.log(userService.getCurrent());\n        return userService.getCurrent().then(function (result) {\n          return result.data;\n        });\n      }]\n    }\n  };\n  $routeProvider.when('/bet/:id', routeDefinition);\n}])\n.controller('ViewBetCtrl', ['$location', 'bet', 'betService', 'currentUser',  function ($location, bet, betService, currentUser) {\n\n  var self = this;\n  self.bet = bet;\n  self.currentUser = currentUser;\n\n\n\n}]);\n","app.factory('Bet', function () {\n  return function (spec) {\n    spec = spec || {};\n    return {\n        title: spec.title,\n        // challenger: spec.challenger,\n        amount: spec.amount,\n        date: spec.date,\n        location: spec.location,\n        description: spec.description\n    };\n  };\n});\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: '/static/bet-view/edit-bet.html',\n    controller: 'EditBetCtrl',\n    controllerAs: 'vm',\n  };\n  $routeProvider.when('/createbet', routeDefinition);\n}])\n.controller('EditBetCtrl', ['$location', 'Bet', 'betService', function ($location, Bet, betService) {\n\n  var self = this;\n  self.bet = Bet();\n\n  self.addBet = function () {\n    betService.addBet(self.bet).then(self.goToBet);\n  };\n\n  self.goToBet = function (bet) {\n    console.log(bet);\n    $location.path('/bet/' + bet.id);\n  };\n\n\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/bets/bets.html',\n    controller: 'BetsCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      bets: ['betService', function (betService){\n        return betService.getBets();\n      }]\n    }\n  };\n  $routeProvider.when('/bets', routeDefinition);\n}])\n.controller('BetsCtrl', ['$location', 'betService', 'bets', function ($location, betService, bets) {\n\n  var self = this;\n  self.bets = bets;\n  // self.currentUser = currentUser;\n  // self.users = users;\n\n  self.goToBet = function (id) {\n    $location.path('/bet/' + id );\n    };\n\n\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: '/static/landing/landing.html',\n    controller: 'LandingCtrl',\n    controllerAs: 'vm',\n  };\n  $routeProvider.when('/', routeDefinition);\n}])\n.controller('LandingCtrl', ['$location', function ($location) {\n\n  var self = this;\n\n\n\n}]);\n","app.controller('MainNavCtrl',\n  ['$location', 'StringUtil', function($location, StringUtil) {\n    var self = this;\n\n    self.isActive = function (path) {\n      // The default route is a special case.\n      if (path === '/') {\n        return $location.path() === '/';\n      }\n      return StringUtil.startsWith($location.path(), path);\n    };\n\n    //\n    // self.goToLogIn = function () {\n    //   $location.path('/login');\n    // };\n  }]);\n","app.factory('betService', ['$http', '$log', function($http, $log) {\n\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function post(url, share) {\n    return processAjaxPromise($http.post(url, share));\n  }\n\n  function remove(url) {\n    return processAjaxPromise($http.delete(url));\n\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      var data = result.data;\n      console.log(data);\n      return data.data;\n    })\n    .catch(function (error) {\n     $log.log(error);\n     throw error;\n    });\n  }\n\n\n  return {\n    // getBetList: function () {\n    //   return get('/api/res');\n    // },\n\n    getBet: function (id) {\n      return get('/api/bets/' + id);\n    },\n\n    addBet: function (bet) {\n      return post('/api/user/bets', bet);\n    },\n\n    getBets: function () {\n      return get('/api/bets');\n    }\n\n    // deleteShare: function (id) {\n    //   return remove('/api/res/' + id);\n    // }\n  };\n}]);\n","app.factory('userService', ['$http', '$q', '$log', function($http, $q, $log) {\n\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      return result.data;\n    })\n    .catch(function (error) {\n      $log.log(error);\n    });\n  }\n\n  return {\n    listUsers: function () {\n      return get('/api/users');\n    },\n\n    getByUserId: function (userId) {\n      if (!userId) {\n        throw new Error('getByUserId requires a user id');\n      }\n\n      return get('/api/users/' + userId);\n    },\n\n    addUser: function (user) {\n      return processAjaxPromise($http.post('/api/users', user));\n    },\n\n    getCurrent: function () {\n      return get('/api/user/me');\n    }\n  };\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/user/user.html',\n    controller: 'UserCtrl',\n    controllerAs: 'vm'\n    // resolve: {\n    //   currentUser: ['userService', function (userService){\n    //     return userService.getCurrent();\n    //   }]\n    //   }\n  };\n  $routeProvider.when('/users', routeDefinition);\n}])\n.controller('UserCtrl', ['$location', 'userService', 'currentUser', function ($location, userService, currentUser) {\n\n  var self = this;\n  self.currentUser = currentUser;\n\n  // self.user = User();\n\n  //holds any error messages\n  // self.errors = {};\n  //\n  // self.createUser = function () {\n  //   //reset error object for next request\n  //   self.errors = {};\n  //   userService.createUser(self.user).then(function(success){\n  //     $location.path('/tasks');\n  //\n  //   }, function(error){\n  //     // set the errors object for our view\n  //     self.errors = error.data;\n  //\n  //   });\n  //\n  //   };\n\n\n}]);\n","app.factory('StringUtil', function() {\n  return {\n    startsWith: function (str, subStr) {\n      str = str || '';\n      return str.slice(0, subStr.length) === subStr;\n    }\n  };\n});\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n"],"sourceRoot":"/source/"}